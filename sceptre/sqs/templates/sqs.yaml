AWSTemplateFormatVersion: 2010-09-09
Description: Deploy the SQS Service Catalog Product
Parameters:
  ScProductVersion:
    Type: String
    Description: Version of the SC Product to use.
  QueueName:
    Type: String
    Description: Queue name
  CustomPolicyJSON:
    Type: String
    Description: Custom JSON SQS Queue Policy Document ex. https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-creating-custom-policies-access-policy-examples.html
    Default: ""
  NeedEncryption:
    Type: String
    Description: Select true if encryption at rest needs to be enabled. Currently known to cause issues with SQS->SNS
    Default: false
    AllowedValues:
      - true
      - false
  VisibilityTimeout:
    Type: Number
    Description: The length of time during which a message will be unavailable after a message is delivered from the queue.
    Default: 30
    MinValue: 0
    MaxValue: 43200
  MessageRetentionPeriod:
    Type: Number
    Description: The number of seconds that Amazon SQS retains a message.
    Default: 345600
    MinValue: 60
    MaxValue: 1209600
  DelaySeconds:
    Type: Number
    Description: The time in seconds that the delivery of all messages in the queue is delayed.
    Default: 0
    MinValue: 0
    MaxValue: 900
  KmsDataKeyReusePeriodSeconds:
    Type: Number
    Description: The length of time in seconds that Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again.
    Default: 300
    MinValue: 60
    MaxValue: 86400
  MaximumMessageSize:
    Type: Number
    Description: The limit of how many bytes that a message can contain before Amazon SQS rejects it.
    Default: 262144
    MinValue: 1024
    MaxValue: 262144
  ReceiveMessageWaitTimeSeconds:
    Type: Number
    Description: Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message in in queue.
    Default: 0
    MinValue: 0
    MaxValue: 20
  DeadLetterTargetArn:
    Type: String
    Description: (optional) ARN of the dead-letter queue to which Amazon SQS moves messages after the value of maxReceiveCount is exceeded.
    Default: ""
  MaxReceiveCount:
    Type: String
    Description: (Optional) The number of times a message is delivered to the source queue before being moved to the dead-letter queue.
    Default: 1
Resources:
  Queue:
    Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
    Properties:
      ProductName: SQS
      ProvisioningArtifactName: !Ref ScProductVersion 
      ProvisionedProductName: !Sub sqs-${QueueName}
      ProvisioningParameters:
        - Key: QueueName
          Value: !Ref QueueName
        - Key: CustomPolicyJSON
          Value: !Ref CustomPolicyJSON
        - Key: NeedEncryption
          Value: !Sub "${NeedEncryption}"
        - Key: VisibilityTimeout
          Value: !Sub "${VisibilityTimeout}"
        - Key: MessageRetentionPeriod
          Value: !Sub "${MessageRetentionPeriod}"
        - Key: DelaySeconds
          Value: !Sub "${DelaySeconds}"
        - Key: KmsDataKeyReusePeriodSeconds
          Value: !Sub "${KmsDataKeyReusePeriodSeconds}"
        - Key: MaximumMessageSize
          Value: !Sub "${MaximumMessageSize}"
        - Key: ReceiveMessageWaitTimeSeconds
          Value: !Sub "${ReceiveMessageWaitTimeSeconds}"
        - Key: DeadLetterTargetArn
          Value: !Ref DeadLetterTargetArn
        - Key: MaxReceiveCount
          Value: !Sub "${MaxReceiveCount}"
      Tags:
        - Key: doNotShutDown
          Value: true
Outputs:
  QueueArn:
    Value: !GetAtt Queue.Outputs.QueueArn
  QueueUrl:
    Value: !GetAtt Queue.Outputs.QueueUrl